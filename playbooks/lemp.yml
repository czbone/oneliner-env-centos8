#- hosts: localhost ## for ansible-playbook command in provision.sh
- hosts: all

  vars_files:
    - vars/main.yml

  vars:
    php_version: '7.4'
    mariadb_version: '10.4'

    #######################################
    # Parameters for test program
    #######################################
    db_host: 'localhost'
    db_user: 'root'
    db_password: ''
    site_db_name: 'testdb'
    site_db_user: 'testdb_user'
    site_db_password: 'test'

  roles:
    - geerlingguy.repo-remi
    - nginxinc.nginx
    - geerlingguy.php-versions
    - geerlingguy.php
    - geerlingguy.php-mysql
    - mariadb

  pre_tasks:
    - name: Add official MariaDB repository with hotfix for MariaDB-server
      shell: |
        cat << 'EOF' > /etc/yum.repos.d/mariadb.repo
        [mariadb]
        name = MariaDB
        baseurl = http://yum.mariadb.org/{{ mariadb_version }}/centos8-amd64
        module_hotfixes=1
        gpgkey=https://yum.mariadb.org/RPM-GPG-KEY-MariaDB
        gpgcheck=1
        EOF

  tasks:
    ##########################################################
    # base environment
    ##########################################################
    # Install additional package
    - name: Install additional package for CentOS8
      yum:
        name:
          - langpacks-ja

    - selinux: state=disabled
    - name: Set timezone to Asia/Tokyo
      timezone:
        name: Asia/Tokyo

    ##########################################################
    # PHP configuration
    ##########################################################
    # PHP-FPM configuration
    - name: update PHP-FPM configuration
      copy: src="php-fpm_www.conf" dest="/etc/php-fpm.d/www.conf" owner=root group=root mode=0644

    # fix log directory ownership
    - file: path=/var/log/php-fpm owner=root group=root mode=0700

    # fix PHP directory ownership
    - file: path="/var/lib/php/opcache" owner=nginx group=nginx mode=0770
    - file: path="/var/lib/php/session" owner=nginx group=nginx mode=0770
    - file: path="/var/lib/php/wsdlcache" owner=nginx group=nginx mode=0770

    ##########################################################
    # nginx configuration
    ##########################################################
    # Nginx configuration
    - name: update Nginx default site configuration
      copy: src="default.conf" dest="/etc/nginx/conf.d/default.conf" owner=root group=root mode=0644

    # fix directory ownership
    - file: path=/var/log/nginx owner=root group=root mode=0755

    # fix Nginx log ownership
    - copy: src="logrotate_nginx" dest="/etc/logrotate.d/nginx" owner=root group=root mode=0644
    - file: path="/var/log/nginx/access.log" owner=nginx group=nginx mode=0640
    - file: path="/var/log/nginx/error.log" owner=nginx group=nginx mode=0640

    ##########################################################
    # user environment
    ##########################################################
    # add root shell environment
    #- copy: src="root_bash_profile" dest="/root/.bash_profile" owner=root group=root mode=0644
    - name: Add LANG to .bash_profile
      shell: |
        cat << 'EOF' >> /root/.bash_profile
        export LANG=ja_JP.UTF-8
        export TZ=JST-9
        EOF

    ##########################################################
    # firewalld configuration
    ##########################################################
    - name: firewalld configuration(HTTP) - on
      firewalld:
        service: http
        permanent: yes
        state: enabled
    - name: firewalld configuration(HTTPS) - on
      firewalld:
        service: https
        permanent: yes
        state: enabled
    - name: start firewalld
      systemd:
        name: firewalld
        state: restarted
        daemon_reload: yes
        enabled: yes

    ##########################################################
    # create test program
    ##########################################################
    # create tables
    - name: create default database
      mysql_db:
        name: "{{ site_db_name }}"
        login_host: "{{ db_host }}"
        login_user: "{{ db_user }}"
        login_password: "{{ db_password }}"
        state: present
        login_unix_socket: /var/lib/mysql/mysql.sock
    - name: create default database user
      mysql_user:
        host: '{{ db_host }}'
        name: "{{ site_db_user }}"
        password: "{{ site_db_password }}"   
        priv: "{{ site_db_name }}.*:ALL,GRANT"
        login_host: "{{ db_host }}"
        login_user: "{{ db_user }}"
        login_password: "{{ db_password }}"
        state: present
        login_unix_socket: /var/lib/mysql/mysql.sock

    # add php test scripts in default site
    - template: src="php_index.j2" dest="/var/www/html/index.php"
    - template: src="php_index2.j2" dest="/var/www/html/index2.php"